name: Code analysis
on:
  pull_request:
  push:
env:
  PIPENV_VENV_IN_PROJECT: enabled
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec
      # v1.3.2
      with:
        terraform_version: 1.0.6

    - name: Install pipenv
      run: python -m pip install --upgrade pipenv==2021.5.29 wheel

    - name: Restore pipenv cache
      id: cache-pipenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: pipenv install --deploy --dev

      #- name: Activate pipenv venv
      #  env:
      #    PIPENV_VENV_IN_PROJECT: 1
      #  run: |
      #    pipenv run bash -c 'echo $PATH' >> $GITHUB_PATH
      #    pipenv run python -c "import sys; print('\n'.join(sys.path))"

    - name: Run pre-commit
      uses: pre-commit/action@9b88afc9cd57fd75b655d5c71bd38146d07135fe
      # v2.0.3
